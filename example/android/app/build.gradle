plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    compileSdkVersion 35

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/com.android.tools/proguard/coroutines.pro']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.sap.gigya_flutter_plugin_example"
        minSdkVersion 24
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        multiDexEnabled true
    }
    
    buildTypes {

        debug {
            signingConfig signingConfigs.debug
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    namespace 'com.sap.gigya_flutter_plugin_example'
    lint {
        disable 'InvalidPackage'
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "androidx.multidex:multidex:2.0.1"

    // Needed when implementing Gigya SDK activity based operations.
    implementation 'androidx.appcompat:appcompat:1.5.1'

    // ChromeTabs
    implementation 'androidx.browser:browser:1.3.0'

    // FIDO (Optional)
    implementation 'com.google.android.gms:play-services-fido:18.1.0'

    // Facebook (Optional)
    // your existing facebook-core, still excluding installreferrer:
    implementation('com.facebook.android:facebook-core:14.1.1') {
        exclude group: 'com.android.installreferrer', module: 'installreferrer'
    }

    // bring in the Facebook Login APIs:
    implementation('com.facebook.android:facebook-login:14.1.1') {
        // (optionally also exclude installreferrer here, if you need to)
        exclude group: 'com.android.installreferrer', module: 'installreferrer'
    }

    // Google (Optional)
    implementation 'androidx.credentials:credentials-play-services-auth:1.2.2'
    implementation 'com.google.android.libraries.identity.googleid:googleid:1.1.0'

    // 1. Google Play Install Referrer Client
    implementation "com.android.installreferrer:installreferrer:2.2"
// Provides com.android.installreferrer.api.InstallReferrerClient… :contentReference[oaicite:0]{index=0}

// 2. Volley (for Gigya’s network provider)
    implementation "com.android.volley:volley:1.2.1"
// Provides com.android.volley.* types :contentReference[oaicite:1]{index=1}

// 3. Material Components (BottomSheetDialog, etc.)
    implementation "com.google.android.material:material:1.10.0"
// Provides com.google.android.material.bottomsheet.BottomSheetDialog :contentReference[oaicite:2]{index=2}

// 4. Play Feature Delivery (replaces monolithic play-core for splitinstall/splitcompat)
    implementation "com.google.android.play:feature-delivery:2.1.0"
// Provides com.google.android.play.core.splitinstall.*, SplitCompatApplication… :contentReference[oaicite:3]{index=3}

// 5. OkHttp + Logging Interceptor (for Gigya’s OkHttp adapter)
    implementation "com.squareup.okhttp3:okhttp:4.9.3"
// Provides okhttp3.OkHttpClient, Request, Response… :contentReference[oaicite:4]{index=4}
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.0"
// Provides okhttp3.logging.HttpLoggingInterceptor :contentReference[oaicite:5]{index=5}

// 6. Firebase Cloud Messaging & IID (for Gigya’s push)
    implementation "com.google.firebase:firebase-messaging:23.1.2"
// Provides FirebaseMessagingService, RemoteMessage… :contentReference[oaicite:6]{index=6}
    implementation "com.google.firebase:firebase-iid:21.1.0"
// Provides FirebaseInstanceId, InstanceIdResult… :contentReference[oaicite:7]{index=7}
}
